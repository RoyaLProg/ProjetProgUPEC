class Box{
    int x = 0;
    int y = 0;
    int color = 0;
    int fetch = 0;
}
class Game{
    private Board board;
    private AI Computer = new AI();
    public Game(){
        board = new Board();
    }
}
public class Board{
    private Box[][] boxes = new Box[11][11];
    public Board(){
        for(int i = 0; i < boxes.length; i++){
            for(int j = 0; j < boxes[0].length; j++){
                boxes[i][j] = new Box();
                boxes[i][j].x = j+1;
                boxes[i][j].y = i+1;
                boxes[i][j].color = 0;
            }
        }
    }
    public void reset(){
        int count = 0;
        int x = 1;
        int y = 1;
        while (count < 121){
            for(int i = 0; i < boxes.length; i++){
            for(int j = 0; j < boxes[0].length; j++){
                boxes[i][j].x = j;
                boxes[i][j].y = i;
                boxes[i][j].color = 0;
            }
        }
        }
    }
    public void getColorMap(){
        for(int i = 0;i<boxes.length;i++){
            for(int j = 0; j<boxes[0].length;j++){
                print(boxes[i][j].color + " ");
            }
            println();
        }
        println("0 = vide; 1 = joueur 1; 2 = joueur 2; 3 = AI PARSE");
        int count = 0;
    }
    public int getColor(int x,int y){
        return this.boxes[x-1][y-1].color;
    }
}
private class AI{
    Board board = new Board();
    int color = 0;
    
}
private class player{
    int color = 0;
}
void Affichage(){
    reset(300, 300);
}
void hexagone(){
    for(int i = 0; i < 30; i++){
        for(int j = 0; j < 30; i++){
            if(i == i) setPixel(i,j,"grey");
        }
    }
}
void main(){
    Game game = new Game();
    Board board = game.board;
    board.getColorMap();
}